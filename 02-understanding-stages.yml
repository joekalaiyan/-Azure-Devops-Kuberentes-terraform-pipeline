# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: ubuntu-latest

stages:
 - stage: Build 
   jobs:
   - job: FisrtJob
     steps:
     - bash: echo build FirstJob 
     - bash: echo $(PipelineLevelVariable)
     - bash: echo $(Build.BuildNumber)
     - bash: echo $(Build.BuildId)
     - bash: echo $(Build.BuildSourceBranchName)
     - bash: echo $(Build.BuildSourceDirectory)
     - bash: echo $(System.DefauktWorkingDirectory)
     - bash: ls -R $(System.DefauktWorkingDirectory)
     - bash: echo $(Build.ArtifactStaging)
     - bash: java -version
     - bash: node --version
     - bash: python --version
     - bash: mvn -version
     - bash: ls -Rcho $(Build.ArtifactStaging)
     
     - task: CopyFiles@2
       inputs:
          SourceFolder: '$(System.DefauktWorkingDirectory)'
          Contents: |
            **/*.yaml
            **/*.tf
          TargetFolder: '$(Build.ArtifactStaging)'
     - bash: ls -Rcho $(Build.ArtifactStaging)  

      
  #  - job: SecondJob
  #    steps:
  #    - bash: echo build SecondJob   
#  #- stage: DevDeploy
#    variables: 
#      environment:  Dev
#    dependsOn: Build
#    jobs:
#    - job: DevDeployJob
#      steps:
#      - bash: echo build $(environment)DeployJob
#  - stage: QADeploy
#    variables:
#      environment: QA
#    dependsOn: DevDeploy
#    jobs:
#    - job: QADeployJob
#      steps:
#      - bash: echo build $(environment)DeployJOb 
#  - stage: ProdDeploy
#    variables:
#      environment: Prod
#    dependsOn: 
#    - DevDeploy
#    - QADeploy
#    jobs:
#    - job: ProdDeployJob
#      steps:
#      - bash: echo build $(environment)DeployJOb 


